var O=Object.defineProperty,y=Object.defineProperties,D=Object.getOwnPropertyDescriptors,b=Object.getOwnPropertySymbols,x=Object.prototype.hasOwnProperty,S=Object.prototype.propertyIsEnumerable,v=(t,i,e)=>i in t?O(t,i,{enumerable:!0,configurable:!0,writable:!0,value:e}):t[i]=e,p=(t,i)=>{for(var e in i||(i={}))x.call(i,e)&&v(t,e,i[e]);if(b)for(var e of b(i))S.call(i,e)&&v(t,e,i[e]);return t},I=(t,i)=>y(t,D(i)),F=(t,i,e)=>new Promise((n,s)=>{var o=r=>{try{h(e.next(r))}catch(u){s(u)}},c=r=>{try{h(e.throw(r))}catch(u){s(u)}},h=r=>r.done?n(r.value):Promise.resolve(r.value).then(o,c);h((e=e.apply(t,i)).next())}),_={src:"",cache:"no-cache",autoDimensions:!0,transform:t=>t};function A(t=""){return typeof t=="string"?I(p({},_),{src:t}):p(p({},_),t)}function w(t){const i=/(\d+)(\D*)/,[,e="0",n=""]=t.match(i)||[];return{number:parseInt(e,10),unit:n}}function P(t,i){const{width:e,height:n}=t;if("width"in i){const{width:o}=i;return{width:o,height:o/e*n}}const{height:s}=i;return{width:s/n*e,height:s}}function H(t,i){const e=t.getAttribute("width"),n=t.getAttribute("height");if(e&&n)return{width:e,height:n};const s={width:e||"",height:n||""},o=i.getAttribute("width"),c=i.getAttribute("height"),h=i.getAttribute("viewBox");if(!(o&&c||h))return s;let r=0,u=0,d="",f="";if(o&&c?({number:r,unit:d}=w(o),{number:u,unit:f}=w(c)):h&&([,,r,u]=h.split(" ").map(a=>parseInt(a,10))),d!==f)return{width:e||o||"",height:n||c||""};if(e){const{number:a,unit:m}=w(e),g=P({width:r,height:u},{width:a}),l=m||d;return{width:g.width.toFixed(2)+l,height:g.height.toFixed(2)+l}}if(n){const{number:a,unit:m}=w(n),g=P({width:r,height:u},{height:a}),l=m||f;return{width:g.width.toFixed(2)+l,height:g.height.toFixed(2)+l}}return{width:r+d,height:u+f}}var N=function(t,i){let e=A(i);function n(){return F(this,null,function*(){if(e.src){const s=yield fetch(e.src,{cache:e.cache}),o=e.transform(yield s.text()),c=new DOMParser().parseFromString(o,"image/svg+xml").documentElement;for(let h=0;h<c.attributes.length;h++){const r=c.attributes[h];!t.hasAttribute(r.name)&&!["width","height"].includes(r.name)&&t.setAttribute(r.name,r.value)}if(e.autoDimensions){const h=H(t,c);t.setAttribute("width",h.width),t.setAttribute("height",h.height)}else t.setAttribute("width",t.getAttribute("width")||""),t.setAttribute("height",t.getAttribute("height")||"");t.innerHTML=c.innerHTML}})}return n(),{update(s){e=A(s),n()}}};export{N as i};
